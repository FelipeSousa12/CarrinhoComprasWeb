{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectsReact\\\\e-commerce\\\\src\\\\pages\\\\Home\\\\index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { MdShoppingCart } from 'react-icons/md';\nimport { ProductList } from './styles';\nimport { formatPrice } from '../../util/format';\nimport api from '../../services/api';\nimport * as CartActions from '../../store/modules/cart/actions';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: []\n    };\n\n    this.handleAddProcuts = id => {\n      const {\n        addToCartRequest\n      } = this.props;\n      addToCartRequest(id);\n    };\n  }\n\n  async componentDidMount() {\n    const response = await api.get('products');\n    const data = response.data.map(product => ({ ...product,\n      priceFormatted: formatPrice(product.price)\n    }));\n    console.log(data);\n    this.setState({\n      products: data\n    });\n  }\n\n  render() {\n    const {\n      products\n    } = this.state;\n    const {\n      amount\n    } = this.props;\n    return React.createElement(ProductList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, products.map(product => React.createElement(\"li\", {\n      key: product.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: product.image,\n      alt: product.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, product.title), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, product.priceFormatted), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleAddProcuts(product.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(MdShoppingCart, {\n      size: 16,\n      color: \"#FFF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), amount[product.id] || 0), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Add to cart\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  amount: state.cart.reduce((amount, product) => {\n    amount[product.id] = product.amount;\n    return amount;\n  }, {})\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(CartActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["D:/ProjectsReact/e-commerce/src/pages/Home/index.js"],"names":["React","Component","connect","bindActionCreators","MdShoppingCart","ProductList","formatPrice","api","CartActions","Home","state","products","handleAddProcuts","id","addToCartRequest","props","componentDidMount","response","get","data","map","product","priceFormatted","price","console","log","setState","render","amount","image","title","mapStateToProps","cart","reduce","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { MdShoppingCart } from 'react-icons/md';\nimport { ProductList } from './styles';\nimport { formatPrice } from '../../util/format';\nimport api from '../../services/api';\nimport * as CartActions from '../../store/modules/cart/actions';\n\nclass Home extends Component {\n  state = {\n    products: [],\n  };\n\n  async componentDidMount() {\n    const response = await api.get('products');\n\n    const data = response.data.map(product => ({\n      ...product,\n      priceFormatted: formatPrice(product.price),\n    }));\n\n    console.log(data);\n\n    this.setState({ products: data })\n  }\n\n  handleAddProcuts = id => {\n    const { addToCartRequest } = this.props;\n\n    addToCartRequest(id);\n  };\n\n  render() {\n    const { products } = this.state;\n    const { amount } = this.props;\n\n    return (\n      <ProductList>\n        {products.map(product => (\n          <li key={product.id}>\n            <img src={product.image} alt={product.title} />\n            <strong>{product.title}</strong>\n            <span>{product.priceFormatted}</span>\n            <button type=\"button\" onClick={() => this.handleAddProcuts(product.id)}>\n              <div>\n                <MdShoppingCart size={16} color=\"#FFF\" />\n                {amount[product.id] || 0}\n              </div>\n              <span>Add to cart</span>\n            </button>\n          </li>\n        ))}\n      </ProductList>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  amount: state.cart.reduce((amount, product) => {\n    (amount[product.id] = product.amount);\n    return amount;\n  }, {})\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(CartActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}